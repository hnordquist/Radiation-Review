#======================================================================
#
#              M A K E I N C L
#
#       Include files for the Rogue Wave Tools.h++ package, using
#       MS Visual C++ under DOS / Windows / Windows NT / Windows 95.
#
#       $Id: makeincl.msc@#/main/spm_bldmdl/6  06/05/97 11:40:37  griswolf (TOOLS707_WIN32_971021)
#
#       Note that ONLY the Microsoft-supplied "nmake" command 
#       should be used.
#
#  (c) Copyright 1989-1997 Rogue Wave Software, Inc.
#  ALL RIGHTS RESERVED
#
#  The software and information contained herein are proprietary to, and
#  comprise valuable trade secrets of, Rogue Wave Software, Inc., which
#  intends to preserve as trade secrets such software and information.
#  This software is furnished pursuant to a written license agreement and
#  may be used, copied, transmitted, and stored only in accordance with
#  the terms of such license and with the inclusion of the above copyright
#  notice.  This software and information or any other copies thereof may
#  not be provided or otherwise made available to any other person.
#
#  Notwithstanding any other lease or license that may pertain to, or
#  accompany the delivery of, this computer software and information, the
#  rights of the Government regarding its use, reproduction and disclosure
#  are as set forth in Section 52.227-19 of the FARS Computer
#  Software-Restricted Rights clause.
#
#  Use, duplication, or disclosure by the Government is subject to
#  restrictions as set forth in subparagraph (c)(1)(ii) of the Rights in
#  Technical Data and Computer Software clause at DFARS 252.227-7013.
#  Contractor/Manufacturer is Rogue Wave Software, Inc.,
#  P.O. Box 2328, Corvallis, Oregon 97339.
#
#  This computer software and information is distributed with "restricted
#  rights."  Use, duplication or disclosure is subject to restrictions as
#  set forth in NASA FAR SUP 18-52.227-79 (April 1985) "Commercial
#  Computer Software-Restricted Rights (April 1985)."  If the Clause at
#  18-52.227-74 "Rights in Data General" is specified in the contract,
#  then the "Alternate III" clause applies.
#
#==========================================================================
#
#=============================================================================
# Usage:
#
#  nmake -f makefile.msc ENVIRON=<environ> MODEL=<model> BINDING=<binding> \
#                        THREAD=<threads>  BMODE=<build mode> MSDEBUG=1\
#                        CCOPTS=<compiler options>
#                        STDLIB=<Y/N/MS> \
#                        STDLIB_INCLUDE=<Standard Library include directory>
#                        STDLIB_LIB=<Standard Library lib directory>
#
#  Where: (* = default)
#      <environ> may be...      for...
#      ----------------------   ------------------------------------------
#      DOS                      good-ol' DOS
#      WIN16                    Microsoft Windows under DOS, or NT's WOW
#     *WIN32                    the Windows NT operating system
#      OS2 (not supported)      the OS/2 2.x operating system
#
#
#      <model> may be...        for...
#      ----------------------   ------------------------------------------
#     *L (DOS, WIN16 default)   large    (mult data segs, mult code segs)
#     *F (WIN32, OS2 default)   flat     (Non-segmented 32-bit system)
#      S                        small    (1 data seg, 1 code seg)
#      M                        medium   (1 data seg, mult code segs)
#      C                        compact  (mult data segs, 1 code seg)
# 
# 
#      <binding> may be...      for...
#      ----------------------   ------------------------------------------
#     *STATIC                   a statically linked version of the library   
#      DLL                      a dynamically linked version of the library   
#
#
#      <thread> may be...       for...
#      ----------------------   ------------------------------------------
#     *SINGLE                   use with single-threaded applications
#      MULTI                    an "MT-safe" version of the library
#
#
#      <build mode> may be...   for...
#      ----------------------   ------------------------------------------
#      DEBUG                    a debug version of the library
#     *RELEASE                  a release version of the library
#
#
#      STDLIB=<Y/N/MS> may be.. for...
#      ----------------------   ----------------------------------------
#      Y                        You will use the Rogue Wave V1.2
#                                 C++ Standard Library
#     *N                        There is no C++ Standard Library present
#      MS                       You will use the Standard Library 
#                                 shipped with MSVC V4.2 or above.
#
#      <Standard Library include directory> may be...
#      -----------------------------------------------------------------
#      The location of the directory where the Standard Library header
#      files (<deque>, <algorithm>, <functional>, etc.) are kept.  If this
#      is left undefined then it is assumed that your environment is 
#      configured to find these header files
#
#
#      <Standard Library lib directory> may be...
#      -----------------------------------------------------------------
#      The location of the directory where the Standard Library ".lib"
#      files (e.g. mstd.lib) are kept.  If this is left undefined
#      then it is assumed that your environment is configured to find
#      these libraries when called for.
#
#
#      <compiler options> may be...
#      -------------------------------------------------------------------
#      any additional compiler options you wish for the build process.
#      Surround with double quotes to include more than one option (see 
#      examples).  Use this option to customize the build process with optim-
#      zation options, source level debugging, 80x86 code generation, etc.
#      Note that if you exercise this option, your flags will replace any
#      given below as defaults.  Note also that if you use this option, you
#      are responsible for making sure that the flags you give make sense
#      with the rest of the options.
#
#     *Defaults:
#         DOS           -O1     # optimize for size
#         WIN16         -O1 -2  # as above, plus generate 286 prot. mode code
#         WIN32                 # none  
#         OS2                   # none  
#
###################################################################
#
#  Examples: 
#
#  (Assume building under DOS):
#      nmake -f makefile.msc ENVIRON=WIN16 
#       // build or use a large-model static library for linking 
#       //   MS Windows applications
#
#      nmake -f makefile.msc BMODE=DEBUG MODEL=M "CCOPTS=-Zi -Od"
#       // build or use a medium-model debug version of the library for DOS;
#       //   compile with source level debugging and optimizations disabled
#
#  (Assume building under Windows NT):
#      nmake -f makefile.msc THREAD=MULTI ENVIRON=WIN32
#       // build or use a flat 32-bit version of the library, suitable for
#       //   use with multi-threaded applications, under Windows NT
#
#  (You are building a C++ Standard Library aware application with the
#   MSVC 4.0 Developer's Studio and want to use the debugger.         )
#      nmake -f makefile.msc STDLIB=Y STDLIB_INCLUDE=../stdlib/include
#      MSDEBUG=1
#       //MSDEBUG is only available for MSVC4.0 or later
#
###################################################################
#
# Check that either Using or Building the library has been specified
#
!if !defined (USE_RWTOOLS) && !defined (BUILD_RWTOOLS)
!error You must define either USE_RWTOOLS or BUILD_RWTOOLS before \
including this file
!endif
 
#
#       set default values:

!ifndef RWTOPLOC
RWTOPLOC=..
!endif

!if "$(PROCESSOR_ARCHITECTURE)" == "PPC"
CPUTYPE = PPC
!else
CPUTYPE = IX86
!endif

! ifndef ENVIRON
ENVIRON = WIN32
! endif

!if "$(BINDING)" == "DLL"
!  ifdef BUILD_RWTOOLS
!     if "$(ENVIRON)" == "WIN32"
!         include version.dat
!     else
!         include $(RWTOPLOC)\rw\tools\version.dat
!    endif
!  endif
!endif

!ifndef MODEL
!  if "$(ENVIRON)" == "DOS" || "$(ENVIRON)" == "WIN16"
MODEL = L
!  else
MODEL = F
!  endif
!endif

!ifndef BINDING
BINDING = STATIC
!endif

!ifndef THREAD
!  if "$(BINDING)" == "STATIC"
THREAD = SINGLE
!  else
THREAD = MULTI
!  endif
!endif

!ifndef BMODE
BMODE = RELEASE
!endif

!ifdef OSTORE
OSSGFLAGS=/I$(OS_ROOTDIR)\include /I$(RWINCL) $(OSFLAGS) $(DEFOPTS) 
!  if "$(OSTORE)" == "PSE"
OSTORE_SCHEMA=
OSTORE_EXT=pse
OSFLAGS=/DRW_USE_OBJECTSTORE_PSE
OSTORE_SCHEMA=schema.obj
!  endif
!  if "$(OSTORE)" == "NORMAL"
OSTORE_EXT=os
OSFLAGS=/DRW_USE_OBJECTSTORE
OSTORE_SCHEMA=schema_g.obj
!  endif
!  if "$(OSTORE)" == "HETERO"
OSTORE_EXT=osht
HETERO_FLAGS=-padm -sopt schema.opt -arch set5
OSFLAGS=/DRW_USE_OBJECTSTORE /DRW_OBJECTSTORE_HETERO
OSTORE_SCHEMA=schema_g.obj
!  endif
!endif

!ifndef CCOPTS
!  if "$(ENVIRON)" == "DOS"
CCOPTS =
!  endif
!  if "$(ENVIRON)" == "WIN16"
CCOPTS = -G2 -Zp
!  endif
!endif

!ifndef STDLIB
STDLIB = N
!endif


###################################################################
#
# Flag legal but unsupported options:
#

!if "$(ENVIRON)" == "OS2"
!  error OS2 not supported for Microsoft compilers
!endif

!if "$(ENVIRON)" == "WIN16" && "$(BINDING)" == "DLL"
!  error Building DLL not supported for 16-bit Windows
!endif

###################################################################
#
# Flag illegal options:
#

!if   "$(ENVIRON)" != "DOS"   && "$(ENVIRON)" != "WIN16"\
  &&  "$(ENVIRON)" != "WIN32" && "$(ENVIRON)" != "OS2"
echo $(ENVIRON)
!  error Illegal value for ENVIRON option
!endif

!if  "$(MODEL)" != "S" && "$(MODEL)" != "C"\
  && "$(MODEL)" != "M" && "$(MODEL)" != "L"\
  && "$(MODEL)" != "F"
!  error Illegal value for MODEL option (choose S, M, C, L, or F)
!endif

!if "$(BINDING)" != "DLL" && "$(BINDING)" != "STATIC"
!  error Illegal value for BINDING option (choose STATIC or DLL)
!endif

!if "$(THREAD)" != "SINGLE" && "$(THREAD)" != "MULTI"
!  error Illegal value for THREAD option (choose SINGLE or MULTI)
!endif

!if "$(BMODE)" != "RELEASE" && "$(BMODE)" != "DEBUG"
!  error Illegal value for BMODE option (choose RELEASE or DEBUG)
!endif


###################################################################
#
# Flag illegal combinations:
#

!if "$(ENVIRON)" == "DOS" && "$(BINDING)" == "DLL"
!  error Illegal options: Cannot combine DOS and DLL
!endif

!if "$(ENVIRON)" == "WIN16" && "$(BINDING)" == "DLL"
!  error Illegal options: Building DLL not supported for 16-bit Windows
!endif

!if  "$(ENVIRON)" == "DOS"  && "$(THREAD)" == "MULTI"
!  error Illegal options: THREAD must be SINGLE for DOS 
!endif

!if "$(ENVIRON)" == "WIN16"  && "$(THREAD)" == "MULTI"
!  error Illegal options: THREAD must be SINGLE for WIN16
!endif

!if ("$(ENVIRON)" == "DOS" || "$(ENVIRON)" == "WIN16") && "$(MODEL)" == "F"
!  error Illegal options: MODEL cannot be F (flat) for DOS and WIN16
!endif

!if ("$(ENVIRON)" == "OS2" || "$(ENVIRON)" == "WIN32") && "$(MODEL)" != "F"
!  error Illegal options: MODEL must be F (flat) for OS2 and WIN32
!endif

!if "$(ENVIRON)" == "WIN32" && "$(BINDING)" == "DLL" && "$(THREAD)" == "SINGLE"
!  error The 32-bit DLL can only be built as a multithread-safe DLL 
!endif

###################################################################
#
# Set the tool names:

# Uncomment the following if using the original Win32 SDK compiler (cl386):
#!if "$(ENVIRON)" == "WIN32"
#SUFFIX1 = 386
#SUFFIX2 = 32
#!endif


CPP       = cl$(SUFFIX1)
LIBRARIAN = lib$(SUFFIX2)
LINKER    = link$(SUFFIX2)

###################################################################
#
# Set the various flags:

#Test for presence of MSVC4.0 debug versions of the run-time library

# This is used to supply the trailing 'd' in "DEBUG" version library names
MSDBG =
MSDBGLINK = 

!ifdef MSDEBUG
!  if "$(ENVIRON)" == "WIN32"
MSDBG = d
MSDBGLINK = /DEBUG
BMODE=DEBUG
!  endif
!endif

!if "$(MODEL)" == "F"
MEMOPT = 
!else
MEMOPT = -A$(MODEL)
!endif

!if "$(ENVIRON)" == "WIN16"
WINNAME = w
ENVOPTS = $(ENVOPTS) -GA
LIBRARIAN = $(LIBRARIAN) /PAGE:64
!else 
!  if "$(ENVIRON)" == "WIN32"
ENVOPTS = $(ENVOPTS) -GX
!   ifndef OSTORE
!     if "$(BINDING)" == "DLL"
#### --- ALL DLLs ---
WINNAME = d
!      if defined(BUILD_RWTOOLS) || defined(USE_RWTOOLS)
#### --- BUILD or USE Tools.h++ as DLL ---
!        if "$(THREAD)" == "MULTI"
#### --- DLL, MULTI
ENVOPTS = $(ENVOPTS) -MD$(MSDBG)
!        else
#### --- DLL, SINGLE (uses multi-thread MSVC libs)
ENVOPTS = $(ENVOPTS) -LD$(MSDBG)
!        endif
#!      else --- BUILD other DLL: Not needed here
!      endif
!    else
#### --- BUILD or USE Tools.h++ as  STATIC LIBRARY
!      if "$(THREAD)" == "MULTI"
#### -- - STATIC, MULTI
ENVOPTS = $(ENVOPTS) -MT$(MSDBG)
!      else
#### -- - STATIC, SINGLE
ENVOPTS = $(ENVOPTS) -ML$(MSDBG)
!      endif
!    endif
!   else
#### ObjectStore requires -MD all the time.
ENVOPTS = $(ENVOPTS) -MD$(MSDBG)
!     if "$(BINDING)" == "DLL"
OSDEFVTBL_LINK = /DEF:rwosvtbl.def /OPT:NOREF
OSDEFVTBL=rwosvtbl.def

!     endif      
!   endif
!  else
#### ---- Neither WIN16 nor WIN32 environment
!error You must have WIN16 or WIN32 to use this makefile
!  endif
!endif

!if "$(BMODE)" == "DEBUG"
DBGNAME=        g
LIBDBGOPT=      /Zi -DRWDEBUG=1 /Fd"$(LIBROOT)".PDB
DBGOPT=         /Zi -DRWDEBUG=1
MSDBGLINK=      /DEBUG
MSDBGLIBLINK=   /DEBUG /PDB:"$(LIBROOT)".PDB
OPTIMIZE=
!else
#       Optimize flag:
!  if "$(PROCESSOR_ARCHITECTURE)" == "PPC"
OPTIMIZE= -Ox
!  else
OPTIMIZE= -Ot
!endif

!endif

!if "$(THREAD)" == "MULTI"
THRNAME = mt
!endif
 
# Tools and Stdlib WINNAMES are inconsistent, hence SLWINNAME:

!if "$(ENVIRON)" == "WIN32"
!  if "$(BINDING)" == "DLL"
SLWINNAME = d
!  else
SLWINNAME = w
!  endif
!endif


###################################################################
#
# Set any relevant defines (DEFOPTS= -Dxxx ...)

!if "$(ENVIRON)" == "WIN32"
!if "$(PROCESSOR_ARCHITECTURE)" == "PPC"
DEFOPTS= -D_M_PPC=1 -DWIN32 -DNOMINMAX
!else
DEFOPTS= -D_X86_=1 -DWIN32 -DNOMINMAX
!endif
!else
DEFOPTS= -DNOMINMAX
!endif

!if "$(BINDING)" == "DLL"
DEFOPTS = $(DEFOPTS) -D_RWTOOLSDLL
!  ifdef BUILD_RWTOOLS 
DEFOPTS = $(DEFOPTS) -D_RWBUILDDLL -D__DLL__
!  endif
!  if "$(STDLIB)" == "Y"
DEFOPTS = $(DEFOPTS) -D_RWSTDDLL
!  endif
!endif

!if "$(STDLIB)" == "N"
DEFOPTS = $(DEFOPTS) -DRW_NO_STL=1
!endif



###################################################################
#
# Locate and name the library:

#               Where the library should be built:

LIBDIR=         $(RWTOPLOC)\lib

#               Rogue Wave header file include path:
RWINCL=         $(RWTOPLOC) -I$(RWSRCDIR)

!if "$(STDLIB)" == "Y"
DEFOPTS = $(DEFOPTS) -DRW_RWV12_STDLIB=1
!ifdef STDLIB_INCLUDE
RWINCL= $(RWINCL) -I$(STDLIB_INCLUDE)
!endif
!endif

#               Rogue Wave header file directory:
RWDIR=          $(RWTOPLOC)\rw

# DLL version number
!ifndef RWTOOLDLLVER
RWTOOLDLLVER=70
!endif

#               Base name of the library:
#               Note max length is 8 since MEMOPT and THRNAME are mut excl.
LIBNAME=        tls$(BUILDTYPE)
DLLNAME=        tls$(RWTOOLDLLVER)$(BUILDTYPE)
TESTLIBNAME=    tlt$(BUILDTYPE)

#               Root names (excluding suffix) of the library:
LIBROOT=        $(LIBNAME)
#               Root name of the dll:
DLLROOT=        $(DLLNAME)
#               Full name (including suffix) of the library:
LIBFULL=        $(LIBDIR)\$(LIBNAME).lib
!ifdef USE_RWTEST
LIBFULL= $(LIBFULL) $(LIBDIR)\$(TESTLIBNAME).lib
!endif

!if "$(STDLIB)" == "Y"
!  if "$(STDLIBNAME)" == ""
STDLIBNAME= std$(BUILDTYPE).lib
!  else
STDLIBNAME= $(STDLIBNAME).lib
!  endif
!  ifdef STDLIB_LIB
STDLIBNAME = $(STDLIB_LIB)\$(STDLIBNAME)
!  endif
!else
STDLIBNAME=
!endif

!if "$(STDLIB)" == "MS"
WINSTREAM = 
!else
WINSTREAM = winstrea.obj
!endif

#Compile flags:
CPPFLAGS= -I$(RWINCL) $(CCOPTS) $(OPTIMIZE) $(DBGOPT) $(MEMOPT) $(ENVOPTS) $(DEFOPTS) $(OSFLAGS)
CPPLIBFLAGS= -I$(RWINCL) $(CCOPTS) $(OPTIMIZE) $(LIBDBGOPT) $(MEMOPT) $(ENVOPTS) $(DEFOPTS) $(OSFLAGS)
MSCMAKEFLAGS= BMODE=$(BMODE) ENVIRON=$(ENVIRON) MODEL=$(MODEL) \
 BINDING=$(BINDING) CCOPTS="$(CCOPTS)"

