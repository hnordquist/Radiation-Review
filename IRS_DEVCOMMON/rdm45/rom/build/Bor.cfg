# Borland 4.5 make rules

.autodepend

# Tools -- must have path to these in your PATH
!IF "$(TARGET_TYPE)" == "WIN32DLL"
CC           = bcc32
LINK         = tlink32
RC           = brc32
!ELSE
CC           = bcc
LINK         = tlink
RC           = brc
!ENDIF

IMPLIB       = implib
LIBEXE       = tlib

!IF "$(QUICKWINAPP)" == "YES"
!IF "$(TARGET_TYPE)" == "WIN32APP"
QUICKWINOPT  = -WC
QUICKWINLOPT = /ap c0X32
!ELSE
QUICKWINOPT  = -WS
!ENDIF
!ELSE
QUICKWINLOPT = /aa c0W32
!ENDIF

# options for all builds
CCFLAGS_OPT  = -Ot
!IF "$(TARGET_TYPE)" == "DOSLIB" || "$(TARGET_TYPE)" == "DOSLIB" 
CCFLAGS_DBG  = -Od -N -v -vi- -y 
!ELSE
CCFLAGS_DBG  = -Od -N -H"vpp.hpp" -v -vi- -y 
!ENDIF

# Compile Options
# Build Large Model 32-bit DLL
!IF "$(TARGET_TYPE)" == "WIN32DLL"
#CCFLAGS      = -WCD -d -H"vpp.hpp" -c $(RDXOPTS)
CCFLAGS      = -WCD -d -c $(RDXOPTS)
LNKFLAGS     = /c/Tpd c0d32
LNKFLAGS_DBG = /v/m
RCFLAGS      = -w32
CC_LIBS      = cw32 import32
LIBEND       =
LINKEND      = ,$(LIBNAME).dll,,$(RDXLIB) $(CC_LIBS) $(DEFFILE)
!ENDIF

# Build Large Model 32-bit Windows Application
!IF "$(TARGET_TYPE)" == "WIN32APP"
CCFLAGS      = -d -Hu -c $(RDXOPTS) $(QUICKWINOPT)
LNKFLAGS     = /c/Tpe$(QUICKWINLOPT)
LNKFLAGS_DBG = /v/m
RCFLAGS      = -w32
CC_LIBS      = cw32 import32
LIBEND       =
LINKEND      = $(ROMLIB) $(RDXLIB) $(CC_LIBS) $(DEFFILE)
!ENDIF

# Build Large Model 16-bit DLL
!IF "$(TARGET_TYPE)" == "WINDLL"
#CCFLAGS      = -ml! -WD -d -H"vpp.hpp" -c -D__MINMAX_DEFINED $(RDXOPTS)
CCFLAGS      = -ml! -WD -d -H"vpp.hpp" -c $(RDXOPTS)
LNKFLAGS     = /n/c/C/Twd c0dl
LNKFLAGS_DBG = /v/m/l
RCFLAGS      = -31
CC_LIBS      = cwl import
LIBEND       =
LINKEND      = $(LIBNAME).dll,,$(RDXLIB) $(CC_LIBS) $(DEFFILE)
!ENDIF

# Build Large Model 16-bit Windows Application
!IF "$(TARGET_TYPE)" == "WINAPP"
CCFLAGS      = -ml -d -H -c -Vf  $(RDXOPTS) $(QUICKWINOPT)
LNKFLAGS     = /n/c/C/Twe c0wl
LNKFLAGS_DBG = /v/m/l
RCFLAGS      = -31
CC_LIBS      = cwl import mathl
LIBEND       =
LINKEND      = $(ROMLIB) $(RDXLIB) $(CC_LIBS) $(DEFFILE)
!ENDIF

# Build Large Model Dos Library
!IF "$(TARGET_TYPE)" == "DOSLIB"
CCFLAGS      = -ml! -d -c $(RDXOPTS)
#CCFLAGS      = -ml! -d -H"vpp.hpp" -c $(RDXOPTS)
LNKFLAGS     = /n/e/c/C/Twd c0l
LNKFLAGS_DBG = /v/m/l
RCFLAGS      = 
CC_LIBS      = 
LIBEND       =
LINKEND      =
!ENDIF

# Build Large Model Dos Application
!IF "$(TARGET_TYPE)" == "DOSAPP"
CCFLAGS      = -ml! -d -Hu -c $(RDXOPTS)
LNKFLAGS     = /n/e/c/C c0l
LNKFLAGS_DBG = /v/m/l
RCFLAGS      =
CC_LIBS      = cl emu mathl
LIBEND       =
LINKEND      = $(ROMLIB) $(RDXLIB) $(QUERYLIB) $(CC_LIBS)
LINK2     = $(LMLIB)
!ENDIF


MKCMD        = $(CC) @mkopts.fil $(INCPATHS) -o$*.obj
RCOPTS       = $(RCFLAGS)

# Debug options
!IFDEF DEBUG
CCOPTS       = $(CCFLAGS)  $(CCFLAGS_DBG)
LNKOPTS      = $(LNKFLAGS)      $(LNKFLAGS_DBG) 
!ELSE
CCOPTS       = $(CCFLAGS)  $(CCFLAGS_OPT)
LNKOPTS      = $(LNKFLAGS) 
!ENDIF



